import rodados.*
import dependencia.*

describe "Flota de rodados" {
	const cachito = new Corsa(color = "rojo")
	test "Satifacer un pedido"{
		var pedidoUno = new Pedido(distancia=480,tiempoMaximo=6,pasajeros=3,
			coloresIncompatibles=#{"rojo","naranja"})
			pedidoUno.velocidadRequerida()
			assert.equals(80, pedidoUno.velocidadRequerida())
			assert.equals(true, pedidoUno.puedeSatifacerPedido(trafic))
		var pedidoDos = new Pedido(distancia=960,tiempoMaximo=8, pasajeros=4, 
			coloresIncompatibles=#{"azul","negro"})
			assert.equals(true,pedidoDos.puedeSatifacerPedido(cachito))
			coloresIncompatibles.add({"rojo"})
			}
	test "Dependencia cultura" {
		const cultura = new Dependencia(empleados = 31)
		cultura.agregarAFlota(cachito)
		assert.equals(true, true)
	}
	
	test "Dependencia deportes" {
		const deportes = new Dependencia(empleados = 45)
		deportes.agregarAFlota(cachito)
		deportes.agregarAFlota(new Corsa(color = "azul"))
		deportes.agregarAFlota(new Corsa(color = "verde"))
		deportes.agregarAFlota(new Kwid(tieneTanqueAdicional = true))
		deportes.agregarAFlota(
			new AutoEspecial(capacidad = 5, velocidadMaxima = 160, 
				peso = 1200, color = "beige")
		)
	
		assert.equals(6450, deportes.pesoTotalFlota())	
		assert.equals(true, deportes.estaBienEquipada())
		assert.equals(7, deportes.capacidadTotalEnColor("azul"))
		assert.equals("beige", deportes.colorDelRodadoMasRapido())
		assert.equals(true, deportes.esGrande())
		assert.equals(25, deportes.capacidadFaltante())	
	}
}











